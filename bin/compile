#!/usr/bin/env ruby

require 'English'
require 'yaml'

$stdout.sync = true

def indent(msg)
  puts "       #{msg}"
end

BUILD_DIR = ARGV[0]
ENV_DIR = ARGV[2]

puts '-----> Found an .oracle.yml'

ORACLE_CONFIG = YAML.load_file("#{BUILD_DIR}/.oracle.yml")

ORACLE_INSTANT_CLIENT_DIR = 'vendor/oracle_instantclient'.freeze
ORACLE_INSTANT_CLIENT_URL = 'https://s3-strapi.s3.eu-central-1.amazonaws.com/instantclient-basic-linux.x64-19.8.0.0.0dbru.zip'.freeze
ORACLE_INSTANT_CLIENT_FILENAME = ORACLE_INSTANT_CLIENT_URL.split(%r{/\//}).last

indent "Making directory #{BUILD_DIR}/#{ORACLE_INSTANT_CLIENT_DIR}"
`mkdir -p #{BUILD_DIR}/#{ORACLE_INSTANT_CLIENT_DIR}`

indent "Downloading and extracting #{ORACLE_INSTANT_CLIENT_FILENAME}"
`curl #{ORACLE_INSTANT_CLIENT_URL} -L -s -o - | tar -xvz -C #{BUILD_DIR}/#{ORACLE_INSTANT_CLIENT_DIR} -f - `

unless $CHILD_STATUS.success?
  indent "Failure while downloading Oracle instant client archive: #{$CHILD_STATUS}"
  exit 1
end

indent "Successfully extracted #{ORACLE_INSTANT_CLIENT_FILENAME}"

ORACLE_NETWORK_ADMIN_DIR = "#{BUILD_DIR}/#{ORACLE_INSTANT_CLIENT_DIR}/network/admin".freeze
`mkdir -p #{ORACLE_NETWORK_ADMIN_DIR}`

TNSNAMES_FILENAME = ORACLE_CONFIG ? ORACLE_CONFIG['tnsnames.ora'] : ''
if File.exist?(File.join(BUILD_DIR, TNSNAMES_FILENAME))
  indent "Symlinking #{TNSNAMES_FILENAME} to #{ORACLE_INSTANT_CLIENT_DIR}/network/admin/tnsnames.ora"
  `ln -sf #{File.join('/app', TNSNAMES_FILENAME)} #{ORACLE_NETWORK_ADMIN_DIR}/tnsnames.ora`
end

SQLNET_FILENAME = ORACLE_CONFIG ? ORACLE_CONFIG['sqlnet.ora'] : ''
if File.exist?(File.join(BUILD_DIR, SQLNET_FILENAME))
  indent "Symlinking #{SQLNET_FILENAME} to #{ORACLE_INSTANT_CLIENT_DIR}/network/admin/sqlnet.ora"
  `ln -sf #{File.join('/app', SQLNET_FILENAME)} #{ORACLE_NETWORK_ADMIN_DIR}/sqlnet.ora`
end

indent 'Create profile.d script'
`mkdir -p #{BUILD_DIR}/.profile.d`

File.open("#{BUILD_DIR}/.profile.d/oracle.sh", 'w') do |f|
  ORACLE_HOME = "/app/#{ORACLE_INSTANT_CLIENT_DIR}".freeze
  f.puts "export ORACLE_HOME=#{ORACLE_HOME}"
  f.puts "export LD_LIBRARY_PATH=#{ORACLE_HOME}:$LD_LIBRARY_PATH"
  f.puts "export PATH=#{ORACLE_HOME}:$PATH"
  f.puts "export TNS_ADMIN=#{ORACLE_HOME}/network/admin"
end

indent 'Save build LD_LIBRARY_PATH to ENV_DIR'

LD_LIBRARY_PATH_FILE = File.join(ENV_DIR, 'LD_LIBRARY_PATH')
existing_ld_library_path = `cat #{LD_LIBRARY_PATH_FILE}` if File.exist?(LD_LIBRARY_PATH_FILE)

File.open(File.join(ENV_DIR, 'LD_LIBRARY_PATH'), 'w') do |f|
  value = "#{BUILD_DIR}/#{ORACLE_INSTANT_CLIENT_DIR}"
  value += ":#{existing_ld_library_path}" unless existing_ld_library_path.nil? || existing_ld_library_path.strip.empty?
  f.puts value
end

indent 'Done!'
